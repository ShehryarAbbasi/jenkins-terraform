{
    "version": 3,
    "terraform_version": "0.9.4",
    "serial": 21,
    "lineage": "7b04e7c7-bc67-4349-a254-10408674338f",
    "modules": [
        {
            "path": [
                "root"
            ],
            "outputs": {
                "InstanceIP": {
                    "sensitive": false,
                    "type": "string",
                    "value": "13.58.39.225"
                },
                "JenkinsURL": {
                    "sensitive": false,
                    "type": "string",
                    "value": "http://13.58.39.225:8080"
                }
            },
            "resources": {
                "aws_iam_instance_profile.jenkins_instance_profile": {
                    "type": "aws_iam_instance_profile",
                    "depends_on": [
                        "aws_iam_role.jenkins_role"
                    ],
                    "primary": {
                        "id": "jenkins-instance-profile",
                        "attributes": {
                            "arn": "arn:aws:iam::286937976732:instance-profile/jenkins-instance-profile",
                            "id": "jenkins-instance-profile",
                            "name": "jenkins-instance-profile",
                            "path": "/",
                            "role": "jenkins-role",
                            "roles.#": "1",
                            "roles.1607212610": "jenkins-role",
                            "unique_id": "AIPAJMR3OTNZKXL2KDA54"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_iam_policy.CloudWatchAccess": {
                    "type": "aws_iam_policy",
                    "depends_on": [],
                    "primary": {
                        "id": "arn:aws:iam::286937976732:policy/CloudWatchAccess-jenkins",
                        "attributes": {
                            "arn": "arn:aws:iam::286937976732:policy/CloudWatchAccess-jenkins",
                            "description": "CloudWatch Access",
                            "id": "arn:aws:iam::286937976732:policy/CloudWatchAccess-jenkins",
                            "name": "CloudWatchAccess-jenkins",
                            "path": "/",
                            "policy": "{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                               \"s3:GetObject\",\n               \"s3:PutObject\",\n               \"s3:ListObjects\",\n                \"cloudwatch:DeleteAlarms\",\n                \"cloudwatch:DescribeAlarmHistory\",\n                \"cloudwatch:DescribeAlarms\",\n                \"cloudwatch:DescribeAlarmsForMetric\",\n                \"cloudwatch:DisableAlarmActions\",\n                \"cloudwatch:EnableAlarmActions\",\n                \"cloudwatch:GetMetricData\",\n                \"cloudwatch:GetMetricStatistics\",\n                \"cloudwatch:ListMetrics\",\n                \"cloudwatch:PutMetricAlarm\",\n                \"cloudwatch:PutMetricData\",\n                \"cloudwatch:SetAlarmState\",\n                \"logs:CreateLogGroup\",\n                \"logs:CreateLogStream\",\n                \"logs:GetLogEvents\",\n                \"logs:PutLogEvents\",\n                \"logs:DescribeLogGroups\",\n                \"logs:DescribeLogStreams\",\n                \"logs:PutRetentionPolicy\",\n                \"ssm:*\",\n                \"ec2messages:AcknowledgeMessage\",\n                \"ec2messages:DeleteMessage\",\n                \"ec2messages:FailMessage\",\n                \"ec2messages:GetEndpoint\",\n                \"ec2messages:GetMessages\",\n                \"ec2messages:SendReply\",\n                \"lambda:*\"\n            ],\n            \"Resource\": [\n                \"*\"\n            ]\n        }\n    ]\n}"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_iam_policy_attachment.attach_cloudwatch": {
                    "type": "aws_iam_policy_attachment",
                    "depends_on": [
                        "aws_iam_policy.CloudWatchAccess",
                        "aws_iam_role.jenkins_role"
                    ],
                    "primary": {
                        "id": "jenkins-iam-attachment",
                        "attributes": {
                            "groups.#": "0",
                            "id": "jenkins-iam-attachment",
                            "name": "jenkins-iam-attachment",
                            "policy_arn": "arn:aws:iam::286937976732:policy/CloudWatchAccess-jenkins",
                            "roles.#": "1",
                            "roles.1607212610": "jenkins-role",
                            "users.#": "0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_iam_role.jenkins_role": {
                    "type": "aws_iam_role",
                    "depends_on": [],
                    "primary": {
                        "id": "jenkins-role",
                        "attributes": {
                            "arn": "arn:aws:iam::286937976732:role/jenkins-role",
                            "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":[\"ssm.amazonaws.com\",\"ec2.amazonaws.com\"]},\"Action\":\"sts:AssumeRole\"}]}",
                            "create_date": "2017-05-12T20:36:14Z",
                            "id": "jenkins-role",
                            "name": "jenkins-role",
                            "path": "/",
                            "unique_id": "AROAJD77GRYQXLFWDIHC2"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_instance.jenkins": {
                    "type": "aws_instance",
                    "depends_on": [
                        "aws_iam_instance_profile.jenkins_instance_profile",
                        "aws_security_group.InvokeJenkins",
                        "data.template_file.user_data_script"
                    ],
                    "primary": {
                        "id": "i-098e282cde49919f8",
                        "attributes": {
                            "ami": "ami-4191b524",
                            "associate_public_ip_address": "true",
                            "availability_zone": "us-east-2c",
                            "disable_api_termination": "false",
                            "ebs_block_device.#": "0",
                            "ebs_optimized": "false",
                            "ephemeral_block_device.#": "0",
                            "iam_instance_profile": "jenkins-instance-profile",
                            "id": "i-098e282cde49919f8",
                            "instance_state": "running",
                            "instance_type": "m4.xlarge",
                            "ipv6_address_count": "0",
                            "ipv6_addresses.#": "0",
                            "key_name": "Mike-us-east-2-Test",
                            "monitoring": "false",
                            "network_interface.#": "0",
                            "network_interface_id": "eni-d0331b9d",
                            "primary_network_interface_id": "eni-d0331b9d",
                            "private_dns": "ip-172-31-45-97.us-east-2.compute.internal",
                            "private_ip": "172.31.45.97",
                            "public_dns": "ec2-13-58-39-225.us-east-2.compute.amazonaws.com",
                            "public_ip": "13.58.39.225",
                            "root_block_device.#": "1",
                            "root_block_device.0.delete_on_termination": "true",
                            "root_block_device.0.iops": "300",
                            "root_block_device.0.volume_size": "100",
                            "root_block_device.0.volume_type": "gp2",
                            "security_groups.#": "0",
                            "source_dest_check": "true",
                            "subnet_id": "subnet-9a83aad0",
                            "tags.%": "1",
                            "tags.Name": "Jenkins",
                            "tenancy": "default",
                            "user_data": "bd62357b11d984772630508c4c7e8c0868f692f8",
                            "volume_tags.%": "0",
                            "vpc_security_group_ids.#": "1",
                            "vpc_security_group_ids.1889815384": "sg-6fe8b606"
                        },
                        "meta": {
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "aws_security_group.InvokeJenkins": {
                    "type": "aws_security_group",
                    "depends_on": [],
                    "primary": {
                        "id": "sg-6fe8b606",
                        "attributes": {
                            "description": "Allow inbound traffic to Jenkins from known CIDRs",
                            "egress.#": "1",
                            "egress.482069346.cidr_blocks.#": "1",
                            "egress.482069346.cidr_blocks.0": "0.0.0.0/0",
                            "egress.482069346.from_port": "0",
                            "egress.482069346.ipv6_cidr_blocks.#": "0",
                            "egress.482069346.prefix_list_ids.#": "0",
                            "egress.482069346.protocol": "-1",
                            "egress.482069346.security_groups.#": "0",
                            "egress.482069346.self": "false",
                            "egress.482069346.to_port": "0",
                            "id": "sg-6fe8b606",
                            "ingress.#": "2",
                            "ingress.1666957572.cidr_blocks.#": "3",
                            "ingress.1666957572.cidr_blocks.0": "64.134.175.0/24",
                            "ingress.1666957572.cidr_blocks.1": "64.134.220.0/24",
                            "ingress.1666957572.cidr_blocks.2": "64.43.26.0/24",
                            "ingress.1666957572.from_port": "22",
                            "ingress.1666957572.ipv6_cidr_blocks.#": "0",
                            "ingress.1666957572.protocol": "TCP",
                            "ingress.1666957572.security_groups.#": "0",
                            "ingress.1666957572.self": "false",
                            "ingress.1666957572.to_port": "22",
                            "ingress.425362760.cidr_blocks.#": "3",
                            "ingress.425362760.cidr_blocks.0": "64.134.175.0/24",
                            "ingress.425362760.cidr_blocks.1": "64.134.220.0/24",
                            "ingress.425362760.cidr_blocks.2": "64.43.26.0/24",
                            "ingress.425362760.from_port": "8080",
                            "ingress.425362760.ipv6_cidr_blocks.#": "0",
                            "ingress.425362760.protocol": "TCP",
                            "ingress.425362760.security_groups.#": "0",
                            "ingress.425362760.self": "false",
                            "ingress.425362760.to_port": "8080",
                            "name": "LogInAndInvokeJenkins",
                            "owner_id": "286937976732",
                            "tags.%": "1",
                            "tags.Name": "allow_LogInAndInvokeJenkins",
                            "vpc_id": "vpc-2e7f9747"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.template_file.user_data_script": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "acdbed55ca26d7a8d4c43cda187cfb082281f2be9ace05a7aa5c7aecfae8e919",
                        "attributes": {
                            "id": "acdbed55ca26d7a8d4c43cda187cfb082281f2be9ace05a7aa5c7aecfae8e919",
                            "rendered": "#!/bin/bash\r\nsudo yum update -y\r\ncd /tmp\r\n\r\n# Next we'll install nginx to act as our reverse proxy and git because we'll need to checkout sources. We'll also install the Java JDK and configure the system to use it by default.\r\nsudo yum install -y git java-1.8.0-openjdk-devel aws-cli\r\nsudo rpm -e java-1.7.0-openjdk-1.7.0.131-2.6.9.0.71.amzn1.x86_64\r\n\r\n#sudo alternatives --config java\r\n\r\necho 'export JAVA_HOME=/usr/lib/jvm/jre-1.8.0-openjdk' | sudo tee -a /etc/profile\r\necho 'export JRE_HOME=/usr/lib/jvm/jre' | sudo tee -a /etc/profile\r\nsource /etc/profile\r\n\r\n# If you need apache maven to build Java sources you can install it as follows:\r\n#sudo wget http://repos.fedorapeople.org/repos/dchen/apache-maven/epel-apache-maven.repo -O /etc/yum.repos.d/epel-apache-maven.repo\r\n#sudo sed -i s/\\$releasever/6/g /etc/yum.repos.d/epel-apache-maven.repo\r\n#sudo yum install -y apache-maven\r\n#mvn –v\r\n\r\n\r\n# We'll need to add the Jenkins repository to available packages:\r\nsudo wget -O /etc/yum.repos.d/jenkins.repo http://pkg.jenkins-ci.org/redhat/jenkins.repo\r\nsudo rpm --import http://pkg.jenkins-ci.org/redhat/jenkins-ci.org.key\r\nsudo yum install jenkins -y\r\n\r\n\r\n# Let's start Jenkins up and make sure it starts every time we reboot:\r\nsudo service jenkins start\r\n#sudo rpm -e java-1.7.0-openjdk-1.7.0.131-2.6.9.0.71.amzn1.x86_64\r\n#sudo service jenkins restart\r\nsudo chkconfig --add jenkins\r\n# initialPW=$(sudo cat /var/lib/jenkins/secrets/IntialAdminPassword)\r\n# java -jar jenkins-cli.jar -s http://localhost:8080 who-am-i --username admin --password $initialPW\r\n\r\n# Wait for jenkins to start\r\nwhile ! echo exit | nc -z -w 3 localhost 8080; do sleep 3; done\r\nwhile curl -s http://localhost:8080 | grep \"Please wait\"; do echo \"Waiting for Jenkins to start..\" \u0026\u0026 sleep 3; done\r\necho \"Jenkins started\"\r\n# \r\nADMINPASS=$(cat /var/lib/jenkins/secrets/initialAdminPassword)\r\nMYCRUMB=$(curl -u \"admin:$ADMINPASS\" 'http://localhost:8080/crumbIssuer/api/xml?xpath=concat(//crumbRequestField,\":\",//crumb)')\r\ncurl -L https://updates.jenkins-ci.org/update-center.json | sed '1d;$d' | curl -X POST -u \"admin:$ADMINPASS\"  -H 'Accept: application/json' -H \"$MYCRUMB\" -d @- http://localhost:8080/updateCenter/byId/default/postBack\r\n# \r\nwhile ! echo exit | nc -z -w 3 localhost 8080; do sleep 3; done\r\nwhile curl -s http://localhost:8080 | grep \"Please wait\"; do echo \"Waiting for Jenkins to start..\" \u0026\u0026 sleep 3; done\r\necho \"Jenkins started\"\r\n# \r\njava -jar jenkins-cli.jar -s http://localhost:8080 install-plugin workflow-remote-loader ansicolor \r\njava -jar jenkins-cli.jar -s http://localhost:8080 safe-restart\r\n# curl https://raw.githubusercontent.com/sebastianbergmann/php-jenkins-template/master/config.xml |\r\n# java -jar jenkins-cli.jar -s http://localhost:8080 create-job php-template\r\n# java -jar jenkins-cli.jar -s http://localhost:8080 reload-configuration\r\n\r\n# OK. Jenkins is actually up and running at this point. We can verify this by accessing localhost on port 8080 with curl.\r\n#curl http://localhost:8080\r\n\r\n# Install Docker so we can run maven on the docker\r\nsudo yum install -y docker\r\nsudo usermod -a -G docker ec2-user\r\nsudo usermod -a -G docker jenkins\r\nsudo service docker start\r\n\r\n# Make Docker File that will be the Terraform Image\r\ncd ~\r\ncat \u003c\u003c EOF \u003e Dockerfile\r\nFROM golang:alpine \r\nMAINTAINER \"HashiCorp Terraform Team \u003cterraform@hashicorp.com\u003e\"\r\nENV TERRAFORM_VERSION=0.9.5 \r\nRUN apk add --update git bash openssh\r\nENV TF_DEV=true \r\nWORKDIR \\$GOPATH/src/github.com/hashicorp/terraform\r\nRUN git clone https://github.com/hashicorp/terraform.git ./ \u0026\u0026 \\\r\n    git checkout v\\$TERRAFORM_VERSION \u0026\u0026 \\\r\n    /bin/bash scripts/build.sh\r\nWORKDIR \\$GOPATH\r\nEOF\r\n# Build The image. dot means look for the docker file. The trailing period is required\r\ndocker build -t tf:latest .\r\n\r\n\r\n\r\n",
                            "template": "#!/bin/bash\r\nsudo yum update -y\r\ncd /tmp\r\n\r\n# Next we'll install nginx to act as our reverse proxy and git because we'll need to checkout sources. We'll also install the Java JDK and configure the system to use it by default.\r\nsudo yum install -y git java-1.8.0-openjdk-devel aws-cli\r\nsudo rpm -e java-1.7.0-openjdk-1.7.0.131-2.6.9.0.71.amzn1.x86_64\r\n\r\n#sudo alternatives --config java\r\n\r\necho 'export JAVA_HOME=/usr/lib/jvm/jre-1.8.0-openjdk' | sudo tee -a /etc/profile\r\necho 'export JRE_HOME=/usr/lib/jvm/jre' | sudo tee -a /etc/profile\r\nsource /etc/profile\r\n\r\n# If you need apache maven to build Java sources you can install it as follows:\r\n#sudo wget http://repos.fedorapeople.org/repos/dchen/apache-maven/epel-apache-maven.repo -O /etc/yum.repos.d/epel-apache-maven.repo\r\n#sudo sed -i s/\\$releasever/6/g /etc/yum.repos.d/epel-apache-maven.repo\r\n#sudo yum install -y apache-maven\r\n#mvn –v\r\n\r\n\r\n# We'll need to add the Jenkins repository to available packages:\r\nsudo wget -O /etc/yum.repos.d/jenkins.repo http://pkg.jenkins-ci.org/redhat/jenkins.repo\r\nsudo rpm --import http://pkg.jenkins-ci.org/redhat/jenkins-ci.org.key\r\nsudo yum install jenkins -y\r\n\r\n\r\n# Let's start Jenkins up and make sure it starts every time we reboot:\r\nsudo service jenkins start\r\n#sudo rpm -e java-1.7.0-openjdk-1.7.0.131-2.6.9.0.71.amzn1.x86_64\r\n#sudo service jenkins restart\r\nsudo chkconfig --add jenkins\r\n# initialPW=$(sudo cat /var/lib/jenkins/secrets/IntialAdminPassword)\r\n# java -jar jenkins-cli.jar -s http://localhost:8080 who-am-i --username admin --password $initialPW\r\n\r\n# Wait for jenkins to start\r\nwhile ! echo exit | nc -z -w 3 localhost 8080; do sleep 3; done\r\nwhile curl -s http://localhost:8080 | grep \"Please wait\"; do echo \"Waiting for Jenkins to start..\" \u0026\u0026 sleep 3; done\r\necho \"Jenkins started\"\r\n# \r\nADMINPASS=$(cat /var/lib/jenkins/secrets/initialAdminPassword)\r\nMYCRUMB=$(curl -u \"admin:$ADMINPASS\" 'http://localhost:8080/crumbIssuer/api/xml?xpath=concat(//crumbRequestField,\":\",//crumb)')\r\ncurl -L https://updates.jenkins-ci.org/update-center.json | sed '1d;$d' | curl -X POST -u \"admin:$ADMINPASS\"  -H 'Accept: application/json' -H \"$MYCRUMB\" -d @- http://localhost:8080/updateCenter/byId/default/postBack\r\n# \r\nwhile ! echo exit | nc -z -w 3 localhost 8080; do sleep 3; done\r\nwhile curl -s http://localhost:8080 | grep \"Please wait\"; do echo \"Waiting for Jenkins to start..\" \u0026\u0026 sleep 3; done\r\necho \"Jenkins started\"\r\n# \r\njava -jar jenkins-cli.jar -s http://localhost:8080 install-plugin workflow-remote-loader ansicolor \r\njava -jar jenkins-cli.jar -s http://localhost:8080 safe-restart\r\n# curl https://raw.githubusercontent.com/sebastianbergmann/php-jenkins-template/master/config.xml |\r\n# java -jar jenkins-cli.jar -s http://localhost:8080 create-job php-template\r\n# java -jar jenkins-cli.jar -s http://localhost:8080 reload-configuration\r\n\r\n# OK. Jenkins is actually up and running at this point. We can verify this by accessing localhost on port 8080 with curl.\r\n#curl http://localhost:8080\r\n\r\n# Install Docker so we can run maven on the docker\r\nsudo yum install -y docker\r\nsudo usermod -a -G docker ec2-user\r\nsudo usermod -a -G docker jenkins\r\nsudo service docker start\r\n\r\n# Make Docker File that will be the Terraform Image\r\ncd ~\r\ncat \u003c\u003c EOF \u003e Dockerfile\r\nFROM golang:alpine \r\nMAINTAINER \"HashiCorp Terraform Team \u003cterraform@hashicorp.com\u003e\"\r\nENV TERRAFORM_VERSION=0.9.5 \r\nRUN apk add --update git bash openssh\r\nENV TF_DEV=true \r\nWORKDIR \\$GOPATH/src/github.com/hashicorp/terraform\r\nRUN git clone https://github.com/hashicorp/terraform.git ./ \u0026\u0026 \\\r\n    git checkout v\\$TERRAFORM_VERSION \u0026\u0026 \\\r\n    /bin/bash scripts/build.sh\r\nWORKDIR \\$GOPATH\r\nEOF\r\n# Build The image. dot means look for the docker file. The trailing period is required\r\ndocker build -t tf:latest .\r\n\r\n\r\n\r\n"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                }
            },
            "depends_on": []
        }
    ]
}
